type Tag {
  id: ID!
  locationName: String
  category: Category
  floor: Int
  coordinates: Coordinate
  createTime: String
  lastUpdateTime: String
  createUser: User
  imageUrl: [String]
  streetViewInfo: StreetView
  status: Status
  statusHistory(pageParams: PageParams): StatusPage!
  archived: Boolean
  viewCount: Int!
}

# https://www.apollographql.com/docs/tutorial/resolvers/#paginate-results
interface Page {
  cursor: String!
  empty: Boolean!
}

type TagPage implements Page {
  tags: [Tag]!
  "the number of milliseconds elapsed since January 1, 1970 00:00:00 UTC."
  cursor: String!
  empty: Boolean!
}

type StatusPage implements Page {
  statusList: [Status]!
  "the number of milliseconds elapsed since January 1, 1970 00:00:00 UTC."
  cursor: String!
  empty: Boolean!
}

type TagFieldsForSubscription {
  """
  There are 3 types:
  * added: the tag just added to the database(firestore)
  * updated: the tag data or the status just be updated
  * archived: the tag just be archived because of number of upvote exceed the 
      threshold.  
  """
  changeType: String!
  tagContent: Tag!
}

type Category {
  "設施任務/問題任務/動態任務"
  missionName: String!
  "**類型"
  subTypeName: String
  "具體**"
  targetName: String
}

type Status {
  id: ID!
  statusName: String!
  createTime: String!
  createUser: User
  description: String
  "Only available in 問題任務, otherwise null"
  numberOfUpVote: Int
  """
  Only available in 問題任務, otherwise null. 
  In the \`statusHistory\` this field would also be null
  """
  hasUpVote: Boolean
}

type User {
  uid: ID!
  displayName: String
  photoURL: String
  "only available when user is login"
  email: String
  userAddTagNumber: Int
}

type Coordinate {
  latitude: String!
  longitude: String!
}

type StreetView {
  povHeading: Float!
  povPitch: Float!
  panoID: String!
  cameraLatitude: Float!
  cameraLongitude: Float!
}

# mutation
enum updateUpVoteAction {
  UPVOTE
  CANCEL_UPVOTE
}

type updateUpVoteResponse {
  tagId: String!
  numberOfUpVote: Int
  hasUpVote: Boolean
}

type AddorUpdateTagResponse {
  tag: Tag!
  imageUploadNumber: Int!
  imageUploadUrls: [String]!
  imageDeleteStatus: Boolean
}

input PageParams {
  pageSize: Int
  cursor: String
}

input addTagDataInput {
  locationName: String!
  category: CategoryInput!
  coordinates: CoordinateInput!
  description: String
  imageUploadNumber: Int
  floor: Int
  streetViewInfo: StreetViewInput
  statusName: String!
}

input updateTagDataInput {
  locationName: String
  category: CategoryInput
  coordinates: CoordinateInput
  floor: Int
  streetViewInfo: StreetViewInput
  imageDeleteUrls: [String!]
  imageUploadNumber: Int
  statusName: String
}

input CoordinateInput {
  latitude: String
  longitude: String
}

input CategoryInput {
  "設施任務/問題任務/動態任務"
  missionName: String!
  "**類型"
  subTypeName: String
  "具體**"
  targetName: String
}

input StreetViewInput {
  povHeading: Float!
  povPitch: Float!
  panoID: String!
  cameraLatitude: Float!
  cameraLongitude: Float!
}

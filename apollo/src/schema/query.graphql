type Query {
  unarchivedTagList(pageParams: PageParams): TagPage!
  tag(tagId: ID!): Tag
  fixedTagList(pageParams: PageParams): FixedTagPage!
  fixedTag(fixedTagId: ID!): FixedTag
  fixedTagSubLocation(fixedTagSubLocationId: ID!): FixedTagSubLocation
  userAddTagHistory(uid: ID!, pageParams: PageParams): TagPage!
  "true if the use have read the guide, need to add token in the header"
  hasReadGuide: Boolean!
  "問題回報 archived threshold"
  archivedThreshold: Int!
  getUserData(uid: ID!): User

  # For research
  unarchivedTagListResearch(pageParams: PageParams): TagResearchPage!
  tagResearch(tagId: ID!): TagResearch
  hasReadGuideResearch: Boolean!
  fixedTagResearchList(pageParams: PageParams): FixedTagResearchPage!
  fixedTagResearch(fixedTagId: ID!): FixedTagResearch
  getUserResearchData(uid: ID!): UserResearch
  userAddTagResearchHistory(uid: ID!, pageParams: PageParams): TagResearchPage!
  getTagResearchListByUser(uid: ID!, pageParams: PageParams): TagResearchPage!
  getUserFixedTagResearchList(uNumber: Int!, pageParams: PageParams): FixedTagResearchPage!
}